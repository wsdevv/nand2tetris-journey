// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/1/Mux8Way16.hdl
/**
 * 8-way 16-bit multiplexor:
 * out = a if sel = 000
 *       b if sel = 001
 *       c if sel = 010
 *       d if sel = 011
 *       e if sel = 100
 *       f if sel = 101
 *       g if sel = 110
 *       h if sel = 111
 */
CHIP Mux8Way16 {
    IN a[16], b[16], c[16], d[16],
       e[16], f[16], g[16], h[16],
       sel[3];
    OUT out[16];

    PARTS:
   
    // bits are "reversed" in sel, e.g. 001 is 100
    Or8Way(in[0..2]=sel[0..2], out=isnotone);

    Not(in=sel[1], out=notMiddleBit);
    Not(in=sel[0], out=notTwo);
    Not(in=sel[2], out=notFive);

    // c if sel = 010 
    And(a=notTwo, b=notFive, out=notTwoAndFive);
    And(a=sel[1], b=notTwoAndFive, out=three);

    // d if sel = 011 (110)
    And(a=sel[0], b=sel[1], out=fourCheck);
    And(a=fourCheck, b=notFive, out=four);

    // e if sel = 100 (001)
    Not(in=three, out=notThree);
    And(a=notTwo, b=notThree, out=notTwoAndThree);
    And(a=sel[2], b=notTwoAndThree, out=five);

    // f if sel = 101
    And(a=sel[0], b=sel[2], out=sixCheck);
    And(a=notMiddleBit, b=sixCheck, out=six);

    // g if sel = 110 (011)
    And(a=sel[2], b=sel[1], out=sevenCheck);
    And(a=sevenCheck, b=notTwo, out=seven);

    // h if sel = 111
    And(a=fourCheck, b=sel[2], out=eight);


    // very inneficient
    Mux16(a=a, b=b, sel=isnotone, out=o);
    Mux16(a=o, b=c, sel=three, out=o2);
    Mux16(a=o2, b=d, sel=four, out=o3);
    Mux16(a=o3, b=e, sel=five, out=o4); //debug
    Mux16(a=o4, b=f, sel=six, out=o5);
    Mux16(a=o5, b=g, sel=seven, out=o6);
    Mux16(a=o6, b=h, sel=eight, out=out);

}