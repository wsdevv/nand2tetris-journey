// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/1/DMux8Way.hdl
/**
 * 8-way demultiplexor:
 * [a, b, c, d, e, f, g, h] = [in, 0,  0,  0,  0,  0,  0,  0] if sel = 000
 *                            [0, in,  0,  0,  0,  0,  0,  0] if sel = 001
 *                            [0,  0, in,  0,  0,  0,  0,  0] if sel = 010
 *                            [0,  0,  0, in,  0,  0,  0,  0] if sel = 011
 *                            [0,  0,  0,  0, in,  0,  0,  0] if sel = 100
 *                            [0,  0,  0,  0,  0, in,  0,  0] if sel = 101
 *                            [0,  0,  0,  0,  0,  0, in,  0] if sel = 110
 *                            [0,  0,  0,  0,  0,  0,  0, in] if sel = 111
 */
CHIP DMux8Way {
    IN in, sel[3];
    OUT a, b, c, d, e, f, g, h;

    PARTS:
    //// Replace this comment with your code.
    
    DMux4Way(in=in, sel=sel[0..1], a=oa, b=ob, c=oc, d=od);
    DMux4Way(in=in, sel=sel[0..1], a=oe, b=of, c=og, d=oh);
    Mux16(
        a[0]=oa, 
        a[1]=ob,
        a[2]=oc,
        a[3]=od,
        b[4]=oe,
        b[5]=of,
        b[6]=og,
        b[7]=oh,
        sel=sel[2], 
        out[0]=a,
        out[1]=b,
        out[2]=c,
        out[3]=d,
        out[4]=e,
        out[5]=f,
        out[6]=g,
        out[7]=h,
    );
}